# -*- mode: snippet -*-
# name: org-new-project-automation
# key: orgnewprojectautomation
# --
(setq focus-areas-$1 '("unclear" "administrative" "career_development" "personal_development" "family" "social" "health" "dating"))
(setq activity-type-$1 '("unclear" "communicating" "reading" "researching" "writing" "troubleshooting" "creativing" "erranding" "practicing"))
(setq context-$1 '("unclear" "apartment" "emacs" "gym" "leisure")) ; favor specific places outside work, vs $1, house etc.

    (defun vxe-tag-search-$1 ()
      (interactive)
      (let ((focus (completing-read "focus: " focus-areas-$1))
            (type (completing-read "type: " activity-type-$1))
            (context (completing-read "context" context-$1)))
        (org-tags-view nil (concat ":" focus ":" type ":" context ":"))))


     (defun vxe-$1-capture ()
       (interactive)
       (let ((focus (completing-read "focus: " focus-areas-$1))
             (type (completing-read "type: " activity-type-$1))
             (context (completing-read "context" context-$1)))
         (kill-new (concat ":" focus ":" type ":" context ":$1:"))
         (org-capture nil "${2:template_abbreviation}")))

     (defun vxe-$1-capture-tag ()
       (interactive)
       (let ((focus (completing-read "focus: " focus-areas-$1))
             (type (completing-read "type: " activity-type-$1))
             (context (completing-read "context" context-$1)))
         (kill-new (concat ":" focus ":" type ":" context ":$1:"))))

    (defun vxe-$1-focus-search ()
      (interactive)
      (let ((query (completing-read "focus: " focus-areas-$1)))
        (org-tags-view nil query)))

(defun vxe-$1-activity-search ()
(interactive)
   (let ((query (completing-read "focus: " activity-type-$1)))
(org-tags-view nil query)))

(defun vxe-$1-context-search ()
(interactive)
   (let ((query (completing-read "focus: " context-$1)))
(org-tags-view nil query)))
