FROM drmeister/cando

ADD . /host
WORKDIR /root

ENV TERM=xterm-256color
ENV DEBIAN_FRONTEND=noninteractive
RUN  apt-get -y update && apt-get -y install git net-tools cmake build-essential zsh curl wget ansible vim-nox cron gnutls-bin liblockfile1 rsync man locate libboost-all-dev
# emacs
RUN apt-get -y install libasound2 libatk1.0-0 libcairo-gobject2 libcairo2 libdbus-1-3 libgdk-pixbuf2.0-0 libgif7 libglib2.0-0 libgtk-3-0 libice6 liblcms2-2 libm17n-0 libotf0 libpango-1.0-0 libpangocairo-1.0-0 librsvg2-2 libsm6 libx11-xcb1 libxfixes3 libxft2 libxinerama1 libxrandr2 libxrender1 emacsen-common python-pip python-dev build-essential 
# RUN ansible-galaxy install -r /host/etc/ansible/requirements.yml
RUN apt-get -y autoclean
RUN pip install virtualenv 
RUN cd /root; git clone https://github.com/vxe/home.git ; cd home ; ansible-playbook -l localhost etc/ansible/clasp.yml --verbose
RUN cd /root/home ; ansible-playbook -l localhost etc/ansible/emacs.yml --verbose
# RUN ansible-playbook -l localhost /host/etc/ansible/perl-locallib.yml --verbose
# RUN ansible-playbook -l localhost /host/etc/ansible/virtualenvs.yml --verbose
# RUN ansible-playbook -l localhost /host/etc/ansible/ruby-gems.yml --verbose
# RUN ansible-playbook -l localhost /host/etc/ansible/slow-lang.yml --verbose
# RUN rm -rf /root/.emacs.d/ && rsync --exclude .git --exclude var --exclude elpa -avz /host/ /root  && emacs -nw --batch -l ~/.emacs.d/init.el --eval="(+ 2 3)" 
RUN rsync --exclude .git --exclude var --exclude elpa -avz /root/home/ /home/app  && emacs -nw --batch -l /home/app/.emacs.d/init.el --eval="(+ 2 3)"
WORKDIR /home/app/clasp/bin
RUN ./clasp --eval "(progn (load \"/home/app/.emacs.d/lib/slime/swank-loader.lisp\" :verbose t) (funcall (read-from-string \"swank-loader:init\")) (funcall (read-from-string \"swank:start-server\") \"/tmp/slime.24\"))"
RUN curl -O https://beta.quicklisp.org/quicklisp.lisp
RUN ./clasp --load quicklisp.lisp --eval "(quicklisp-quickstart:install)"
RUN ./clasp --load quicklisp.lisp --eval "(ql:add-to-init-file)"
RUN cd /home/app/.emacs.d; mkdir -p opt; cd opt; git clone --recursive https://github.com/Andersbakken/rtags.git
RUN apt-get -y install libclang-6.0-dev
RUN cd /home/app/.emacs.d/opt/rtags; cmake -DLIBCLANG_LLVM_CONFIG_EXECUTABLE=/usr/bin/llvm-config-6.0 -DCMAKE_EXPORT_COMPILE_COMMANDS=1 . ; make ; make install
RUN which emacs; rm /root/emacs; ln -s /usr/bin/emacs /root/emacs
RUN cd /home/app/.emacs.d; mkdir -p opt; cd opt; git clone --recursive https://github.com/cquery-project/cquery.git
RUN cd /home/app/.emacs.d/opt/cquery; mkdir build && cd build; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=release -DLIBCLANG_LLVM_CONFIG_EXECUTABLE=/usr/bin/llvm-config-6.0 -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. ; make ; make install
# RUN which emacs; ln -s /usr/bin/emacs /root/emacs

EXPOSE 5432/tcp 
EXPOSE 7199/tcp
EXPOSE 2480/tcp 
EXPOSE 8888/tcp 

ENTRYPOINT [ "bash" ]
