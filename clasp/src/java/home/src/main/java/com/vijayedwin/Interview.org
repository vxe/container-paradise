#+BEGIN_SRC java :tangle Interview.java
  package com.vijayedwin;

  import java.util.ArrayList;
  import java.util.Collections;
  import java.util.List;


  public class Interview {

      public static int randomInt(int n) {
          return (int) (Math.random() * n);
      }
      
      public static int randomIntInRange(int min, int max) {
          return randomInt(max + 1 - min) + min;
      }
      
      public static boolean randomBoolean() {
          return randomIntInRange(0, 1) == 0;
      }
      
      public static boolean randomBoolean(int percentTrue) {
          return randomIntInRange(1, 100) <= percentTrue;
      }
      
      public static boolean[][] randomBooleanMatrix(int M, int N, int percentTrue) {
          boolean[][] matrix = new boolean[M][N];
          for (int i = 0; i < M; i++) {
              for (int j = 0; j < N; j++) {
                  matrix[i][j] = randomBoolean(percentTrue);
              }
          }
          return matrix;
      }   
      
      public static int[][] randomMatrix(int M, int N, int min, int max) {
          int[][] matrix = new int[M][N];
          for (int i = 0; i < M; i++) {
              for (int j = 0; j < N; j++) {
                  matrix[i][j] = randomIntInRange(min, max);
              }
          }
          return matrix;
      }
      
      
      public static int[] randomArray(int N, int min, int max) {
          int[] array = new int[N];
          for (int j = 0; j < N; j++) {
              array[j] = randomIntInRange(min, max);
          }
          return array;
      }
      
      public static LinkedListNode randomLinkedList(int N, int min, int max) {
          LinkedListNode root = new LinkedListNode(randomIntInRange(min, max),
                                                   null, null);
          LinkedListNode prev = root;
          for (int i = 1; i < N; i++) {
              int data = randomIntInRange(min, max);
              LinkedListNode next = new LinkedListNode(data, null, null);
              prev.setNext(next);
              prev = next;
          }
          return root;
      }
      
      public static LinkedListNode linkedListWithValue(int N, int value) {
          LinkedListNode root = new LinkedListNode(value, null, null);
          LinkedListNode prev = root;
          for (int i = 1; i < N; i++) {
              LinkedListNode next = new LinkedListNode(value, null, null);
              prev.setNext(next);
              prev = next;
          }
          return root;
      }
      
      public static LinkedListNode createLinkedListFromArray(int[] vals) {
          LinkedListNode head = new LinkedListNode(vals[0], null, null);
          LinkedListNode current = head;
          for (int i = 1; i < vals.length; i++) {
              current = new LinkedListNode(vals[i], null, current);
          }
          return head;
      }
      
      public static String arrayToString(int[] array) {
          if (array == null) return "";
          return arrayToString(array, 0, array.length - 1);
      }
      
      public static String arrayToString(int[] array, int start, int end) {
          StringBuilder sb = new StringBuilder();
          for (int i = start; i <= end; i++) {
              int v = array[i];
              sb.append(v + ", ");
          }
          return sb.toString();
      }   
      
      public static String stringArrayToString(String[] array) {
          StringBuilder sb = new StringBuilder();
          for (String v : array) {
              sb.append(v + ", ");
          }
          return sb.toString();
      }
      
      public static String toFullBinaryString(int a) {
          String s = "";
          for (int i = 0; i < 32; i++) {
              Integer lsb = new Integer(a & 1);
              s = lsb.toString() + s;
              a = a >> 1;
          }
          return s;
      }
      
      public static String toBaseNString(int a, int base) {
          
          String s = "";
          while (true) {
              int lastdigit = a % base;
              s = lastdigit + s;
              a = a / base;
              if (a == 0)
                  break;
          }
          
          return s;
      }
      
      public static void printMatrix(int[][] matrix) {
          for (int i = 0; i < matrix.length; i++) {
              for (int j = 0; j < matrix[i].length; j++) {
                  if (matrix[i][j] < 10 && matrix[i][j] > -10) {
                      System.out.print(" ");
                  }
                  if (matrix[i][j] < 100 && matrix[i][j] > -100) {
                      System.out.print(" ");
                  }
                  if (matrix[i][j] >= 0) {
                      System.out.print(" ");
                  }
                  System.out.print(" " + matrix[i][j]);
              }
              System.out.println();
          }
      }
      
      public static void printMatrix(boolean[][] matrix) {
          for (int i = 0; i < matrix.length; i++) {
              for (int j = 0; j < matrix[i].length; j++) {
                  if (matrix[i][j]) {
                      System.out.print("1");
                  } else {
                      System.out.print("0");
                  }
              }
              System.out.println();
          }
      }
      
      public static void printIntArray(int[] array) {
          for (int i = 0; i < array.length; i++) {
              System.out.print(array[i] + " ");
          }
          System.out.println("");
      }
      
      public static String charArrayToString(char[] array) {
          StringBuilder buffer = new StringBuilder(array.length);
          for (char c : array) {
              if (c == 0) {
                  break;
              }
              buffer.append(c);
          }
          return buffer.toString();
      }
      
      public static String listOfPointsToString(ArrayList<Point> list) {
          StringBuilder buffer = new StringBuilder();
          for (Point p : list) {
              buffer.append("(" + p.x + "," + p.y + ")");
          }
          return buffer.toString();
      }
      
      public static TreeNode randomBST(int N, int min, int max) {
          int d = randomIntInRange(min, max);
          TreeNode root = new TreeNode(d);
          for (int i = 1; i < N; i++) {
              root.insertInOrder(randomIntInRange(min, max));
          }
          return root;
      }
      
      /* Creates tree by mapping the array left to right, top to bottom. */
      public static TreeNode createTreeFromArray(int[] array) {
          if (array.length > 0) {
              TreeNode root = new TreeNode(array[0]);
              java.util.Queue<TreeNode> queue = new java.util.LinkedList<TreeNode>();
              queue.add(root);
              boolean done = false;
              int i = 1;
              while (!done) {
                  TreeNode r = (TreeNode) queue.element();
                  if (r.left == null) {
                      r.left = new TreeNode(array[i]);
                      i++;
                      queue.add(r.left);
                  } else if (r.right == null) {
                      r.right = new TreeNode(array[i]);
                      i++;
                      queue.add(r.right);
                  } else {
                      queue.remove();
                  }
                  if (i == array.length) {
                      done = true;
                  }
              }
              return root;
          } else {
              return null;
          }
      }
      
      public static String getLongTextBlob() {
          String book = "As they rounded a bend in the path that ran beside the river, Lara recognized the silhouette of a fig tree atop a nearby hill. The weather was hot and the days were long. The fig tree was in full leaf, but not yet bearing fruit. "
                       + "Soon Lara spotted other landmarks�an outcropping of limestone beside the path that had a silhouette like a man�s face, a marshy spot beside the river where the waterfowl were easily startled, a tall tree that looked like a man with his arms upraised. They were drawing near to the place where there was an island in the river. The island was a good spot to make camp. They would sleep on the island tonight."
                       + "Lara had been back and forth along the river path many times in her short life. Her people had not created the path�it had always been there, like the river�but their deerskin-shod feet and the wooden wheels of their handcarts kept the path well worn. Lara�s people were salt traders, and their livelihood took them on a continual journey. ";
          String book_mod = book.replace('.', ' ').replace(',', ' ')
              .replace('-', ' ');
          return book_mod;
      }
      
      public static String[] getLongTextBlobAsStringList() {
          return getLongTextBlob().split(" ");
      }
      
      public static Trie getTrieDictionary() {
          return new Trie(getListOfWords());
      }
      
      public static HashSet<String> getWordListAsHashSet() {
          String[] wordList = getListOfWords();
          HashSet<String> wordSet = new HashSet<String>();
          for (String s : wordList) {
              wordSet.add(s);
          }
          return wordSet;
      }   
      
      public static String[] getListOfWords() {
          // Words in the dictionary.
          String[] wordList = { "the", "of", "and", "a", "to", "in", "is", "be",
                                "that", "was", "world", "awesome", "he", "for", "it", "with",
                                "as", "his", "I", "on", "have", "at", "by", "not", "surely",
                                "they", "this", "attract", "computer", "had", "are", "but",
                                "from", "or", "she", "an", "which", "you", "one", "we", "all",
                                "were", "her", "would", "there", "their", "will", "when",
                                "who", "him", "been", "has", "more", "if", "no", "out", "do",
                                "so", "can", "what", "up", "said", "about", "other", "into",
                                "than", "its", "time", "only", "could", "new", "them", "man",
                                "some", "these", "then", "two", "first", "May", "any", "like",
                                "now", "my", "such", "make", "over", "our", "even", "most",
                                "me", "state", "after", "also", "made", "many", "did", "must",
                                "before", "back", "see", "through", "way", "where", "get",
                                "much", "go", "well", "your", "know", "should", "down", "work",
                                "year", "because", "come", "people", "just", "say", "each",
                                "those", "take", "day", "good", "how", "long", "Mr", "own",
                                "too", "little", "use", "us", "very", "great", "still", "men",
                                "here", "life", "both", "between", "old", "under", "last",
                                "never", "place", "same", "another", "think", "abuse", "house",
                                "while", "high", "right", "might", "came", "off", "find",
                                "states", "since", "used", "give", "against", "three",
                                "himself", "look", "few", "general", "heart", "hand", "school",
                                "resin", "part", "small", "American", "home", "during",
                                "number", "again", "Mrs", "around", "thought", "went",
                                "without", "however", "govern", "don't", "does", "got",
                                "public", "United", "point", "end", "become", "head", "once",
                                "course", "fact", "upon", "need", "system", "set", "every",
                                "trend", "war", "put", "form", "water", "took", "program",
                                "present", "government", "thing", "told", "possible", "group",
                                "large", "until", "always", "city", "didn't", "order", "away",
                                "called", "want", "eyes", "something", "unite", "going",
                                "face", "far", "asked", "interest", "later", "show", "knew",
                                "though", "less", "night", "early", "almost", "let", "open",
                                "enough", "side", "case", "days", "yet", "better", "nothing",
                                "tell", "problem", "toward", "given", "why", "national",
                                "room", "young", "social", "light", "business", "president",
                                "help", "power", "country", "next", "things", "word", "looked",
                                "real", "John", "line", "second", "church", "seem", "certain",
                                "big", "Four", "felt", "several", "children", "service",
                                "feel", "important", "rather", "name", "per", "among", "often",
                                "turn", "development", "developmentcomputer", "keep", "family", "seemed", "white",
                                "company", "mind", "members", "others", "within", "done",
                                "along", "turned", "god", "sense", "week", "best", "change",
                                "kind", "began", "child", "ever", "law", "matter", "least",
                                "means", "question", "act", "close", "mean", "leave", "itself",
                                "force", "study", "York", "action", "it's", "door",
                                "experience", "human", "result", "times", "run", "different",
                                "car", "example", "hands", "whole", "center", "although",
                                "call", "Five", "inform", "gave", "plan", "woman", "boy",
                                "feet", "provide", "taken", "thus", "body", "play", "seen",
                                "today", "having", "cost", "perhaps", "field", "local",
                                "really", "am", "increase", "reason", "themselves", "clear",
                                "I'm", "information", "figure", "late", "above", "history",
                                "love", "girl", "held", "special", "move", "person", "whether",
                                "college", "sure", "probably", "either", "seems", "cannot",
                                "art", "free", "across", "death", "quite", "street", "value",
                                "anything", "making", "past", "brought", "moment", "control",
                                "office", "heard", "problems", "became", "full", "near",
                                "half", "nature", "hold", "live", "available", "known",
                                "board", "effect", "already", "Economic", "money", "position",
                                "believe", "age", "together", "shall", "TRUE", "political",
                                "court", "report", "level", "rate", "air", "pay", "community",
                                "complete", "music", "necessary", "society", "behind", "type",
                                "read", "idea", "wanted", "land", "party", "class", "organize",
                                "return", "department", "education", "following", "mother",
                                "sound", "ago", "nation", "voice", "six", "bring", "wife",
                                "common", "south", "strong", "town", "book", "students",
                                "hear", "hope", "able", "industry", "stand", "tax", "west",
                                "meet", "particular", "cut", "short", "stood", "university",
                                "spirit", "start", "total", "future", "front", "low",
                                "century", "Washington", "usually", "care", "recent",
                                "evidence", "further", "million", "simple", "road",
                                "sometimes", "support", "view", "fire", "says", "hard",
                                "morning", "table", "left", "situation", "try", "outside",
                                "lines", "surface", "ask", "modern", "top", "peace",
                                "personal", "member", "minutes", "lead", "schools", "talk",
                                "consider", "gone", "soon", "father", "ground", "living",
                                "months", "therefore", "America", "started", "longer", "Dr",
                                "dark", "various", "finally", "hour", "north", "third", "fall",
                                "greater", "pressure", "stage", "expected", "secretary",
                                "needed", "That's", "kept", "eye", "values", "union",
                                "private", "alone", "black", "required", "space", "subject",
                                "english", "month", "understand", "I'll", "nor", "answer",
                                "moved", "amount", "conditions", "direct", "red", "student",
                                "rest", "nations", "heart", "costs", "record", "picture",
                                "taking", "couldn't", "hours", "deal", "forces", "everything",
                                "write", "coming", "effort", "market", "island", "wall",
                                "purpose", "basis", "east", "lost", "St", "except", "letter",
                                "looking", "property", "Miles", "difference", "entire", "else",
                                "color", "followed", "feeling", "son", "makes", "friend",
                                "basic", "cold", "including", "single", "attention", "note",
                                "cause", "hundred", "step", "paper", "developed", "tried",
                                "simply", "can't", "story", "committee", "inside", "reached",
                                "easy", "appear", "include", "accord", "Actually", "remember",
                                "beyond", "dead", "shown", "fine", "religious", "continue",
                                "ten", "defense", "getting", "Central", "beginning", "instead",
                                "river", "received", "doing", "employ", "trade", "terms",
                                "trying", "friends", "sort", "administration", "higher",
                                "cent", "expect", "food", "building", "religion", "meeting",
                                "ready", "walked", "follow", "earth", "speak", "passed",
                                "foreign", "NATURAL", "medical", "training", "County", "list",
                                "floor", "piece", "especially", "indeed", "stop", "wasn't",
                                "England", "difficult", "likely", "Suddenly", "moral", "plant",
                                "bad", "club", "needs", "international", "working",
                                "countries", "develop", "drive", "reach", "police", "sat",
                                "charge", "farm", "fear", "test", "determine", "hair",
                                "results", "stock", "trouble", "happened", "growth", "square",
                                "William", "cases", "effective", "serve", "miss", "involved",
                                "doctor", "earlier", "increased", "being", "blue", "hall",
                                "particularly", "boys", "paid", "sent", "production",
                                "district", "using", "thinking", "concern", "Christian",
                                "press", "girls", "wide", "usual", "direction", "feed",
                                "trial", "walk", "begin", "weeks", "points", "respect",
                                "certainly", "ideas", "industrial", "methods", "operation",
                                "addition", "association", "combine", "knowledge", "decided",
                                "temperature", "statement", "Yes", "below", "game", "nearly",
                                "science", "directly", "horse", "influence", "size", "showed",
                                "build", "throughout", "questions", "character", "foot",
                                "Kennedy", "firm", "reading", "husband", "doubt", "services",
                                "according", "lay", "stay", "programs", "anyone", "average",
                                "French", "spring", "former", "summer", "bill", "lot",
                                "chance", "due", "comes", "army", "actual", "Southern",
                                "neither", "relate", "rise", "evening", "normal", "wish",
                                "visit", "population", "remain", "measure", "merely",
                                "arrange", "condition", "decision", "account", "opportunity",
                                "pass", "demand", "strength", "window", "active", "deep",
                                "degree", "ran", "western", "E", "sales", "continued", "fight",
                                "heavy", "arm", "standard", "generally", "carry", "hot",
                                "provided", "serious", "led", "wait", "hotel", "opened",
                                "performance", "maybe", "station", "changes", "literature",
                                "marry", "claim", "works", "bed", "wrong", "main", "unit",
                                "George", "hit", "planning", "supply", "systems", "add",
                                "chief", "officer", "Soviet", "pattern", "stopped", "price",
                                "success", "lack", "myself", "truth", "freedom", "manner",
                                "quality", "gun", "manufacture", "clearly", "share",
                                "movement", "length", "ways", "burn", "forms", "Organization",
                                "break", "somewhat", "efforts", "cover", "meaning", "progress",
                                "treatment", "beautiful", "placed", "happy", "attack",
                                "apparently", "blood", "groups", "carried", "sign", "radio",
                                "dance", "I've", "regard", "man's", "train", "herself",
                                "numbers", "corner", "REACTION", "immediately", "language",
                                "running", "recently", "shake", "larger", "lower", "machine",
                                "attempt", "learn", "couple", "race", "audience", "Oh",
                                "middle", "brown", "date", "health", "persons",
                                "understanding", "arms", "daily", "suppose", "additional",
                                "hospital", "pool", "technical", "served", "declare",
                                "described", "current", "poor", "steps", "reported", "sun",
                                "based", "produce", "determined", "receive", "park", "staff",
                                "faith", "responsibility", "Europe", "latter", "British",
                                "season", "equal", "learned", "practice", "green", "writing",
                                "ones", "choice", "fiscal", "term", "watch", "scene",
                                "activity", "product", "types", "ball", "heat", "clothe",
                                "lived", "distance", "parent", "letters", "returned",
                                "forward", "obtained", "offer", "specific", "straight", "fix",
                                "division", "slowly", "shot", "poet", "seven", "moving",
                                "mass", "plane", "proper", "propose", "drink", "obviously",
                                "plans", "whatever", "afternoon", "figures", "parts",
                                "approve", "saying", "born", "immediate", "fame", "gives",
                                "extent", "justice", "cars", "mark", "pretty", "opinion",
                                "ahead", "glass", "refuse", "enter", "completely", "send",
                                "desire", "judge", "none", "waiting", "popular", "Democratic",
                                "film", "mouth", "Corps", "importance", "touch", "director",
                                "ship", "there's", "council", "EFFECTS", "event", "worth",
                                "existence", "designed", "hardly", "indicated", "analysis",
                                "established", "products", "growing", "patient", "rule",
                                "bridge", "pain", "base", "check", "cities", "elements",
                                "leaders", "discussion", "limited", "sit", "Thomas",
                                "agreement", "gas", "factors", "marriage", "easily", "closed",
                                "excite", "accept", "applied", "allow", "bit", "married",
                                "oil", "Rhode", "shape", "interested", "strange", "compose",
                                "professional", "remained", "news", "Despite", "beauty",
                                "responsible", "wonder", "spent", "tear", "unless", "eight",
                                "permit", "covered", "Negro", "played", "I'd", "vote",
                                "balance", "Charles", "loss", "Commission", "original", "fair",
                                "reasons", "studies", "exactly", "built", "behavior", "enemy",
                                "teeth", "bank", "die", "James", "relations", "weight",
                                "prepared", "related", "sea", "bar", "warn", "post", "trees",
                                "official", "separate", "clay", "Sunday", "raised", "events",
                                "thin", "dropped", "cattle", "invite", "playing", "prevent",
                                "detail", "standing", "grow", "places", "someone", "bright",
                                "Talking", "meant", "print", "capital", "happen", "sides",
                                "everyone", "facilities", "filled", "lip", "essential",
                                "techniques", "June", "knows", "stain", "hadn't", "dinner",
                                "dog", "dollars", "caught", "shout", "buy", "divide",
                                "entered", "Chicago", "speed", "jazz", "appoint", "governor",
                                "institutions", "fit", "materials", "sight", "store",
                                "dependence", "explain", "gain", "he'd", "leadership", "quiet",
                                "realize", "parents", "Communist", "neighbor", "round",
                                "included", "kitchen", "thousand", "Christ", "isn't",
                                "radiation", "broad", "stops", "failure", "retire", "election",
                                "primary", "king", "books", "command", "edge", "ember",
                                "March", "sitting", "conference", "bottom", "lady", "advise",
                                "churches", "model", "battle", "giving", "sport", "address",
                                "considerable", "spread", "funds", "trip", "youth",
                                "CONSTRUCTION", "rock", "regular", "changed", "boat", "memory",
                                "successful", "captain", "hell", "brother", "murder", "quick",
                                "moreover", "highly", "difficulty", "inch", "saw", "clean",
                                "collect", "camp", "experiment", "shows", "Authority", "older",
                                "lord", "variety", "material", "frame", "distinguish",
                                "scientific", "introduce", "principal", "Jack", "kill",
                                "collection", "fell", "entertain", "pieces", "management",
                                "otherwise", "security", "danger", "entirely", "civil",
                                "frequently", "advertise", "records", "secret", "title",
                                "impossible", "yesterday", "fast", "Mike", "produced", "favor",
                                "noted", "caused", "lose", "purposes", "solid", "song",
                                "corporation", "lie", "winter", "dress", "electric", "key",
                                "dry", "reduce", "fresh", "goes", "hill", "names", "slow",
                                "quickly", "telephone", "threaten", "oppose", "deliver",
                                "officers", "expression", "published", "famous", "pray",
                                "adopt", "London", "clothes", "laws", "citizens", "announced",
                                "minute", "master", "sharp", "advantage", "greatest",
                                "relation", "Mary", "leaving", "gray", "manager", "animal",
                                "object", "bottle", "draw", "honor", "recognize", "drop",
                                "intend", "relationship", "opposite", "sources", "poetry",
                                "ability", "assistance", "operating", "bear", "join", "climb",
                                "companies", "exist", "fixed", "gradual", "possibility",
                                "hunt", "spoke", "satisfy", "units", "neck", "sleep",
                                "doesn't", "finished", "carefully", "facts", "nice",
                                "practical", "save", "takes", "allowed", "wine", "remind",
                                "rich", "financial", "dream", "knife", "stations", "civilize",
                                "Rose", "cool", "died", "thick", "imagine", "literary", "bind",
                                "inches", "earn", "familiar", "seeing", "distribution",
                                "marked", "coffee", "rules", "slip", "apply", "page", "beside",
                                "daughter", "Relatively", "classes", "explore", "stated",
                                "German", "musical", "smile", "significant", "block", "mix",
                                "reports", "PROPOSED", "shelter", "presence", "Affairs",
                                "named", "ordinary", "circumstances", "mile", "sweep",
                                "remains", "admire", "Catholic", "dust", "operations", "rain",
                                "tree", "nobody", "Henry", "Robert", "village", "advance",
                                "offered", "agree", "mechanic", "upper", "occasion",
                                "requirements", "capacity", "appears", "travel", "article",
                                "houses", "valley", "beat", "opening", "box", "evil",
                                "succeed", "surround", "application", "slightly", "remembered",
                                "interests", "warm", "subjects", "search", "presented", "shoe",
                                "sweet", "interesting", "membership", "suggest", "notice",
                                "connection", "extreme", "exchange", "flow", "spend",
                                "everybody", "poems", "campaign", "win", "forced", "freeze",
                                "nine", "eat", "newspaper", "please", "escape", "lives",
                                "swim", "file", "wind", "provides", "shop", "apartment",
                                "fashion", "reasonable", "created", "Germany", "watched",
                                "cells", "session", "somehow", "fully", "whose", "teacher",
                                "raise", "recognized", "unity", "Providence", "reference",
                                "explained", "twenty", "Russian", "features", "shoulder",
                                "sir", "forest", "studied", "Sam", "signal", "chair",
                                "reduced", "procedure", "forth", "limit", "disturb",
                                "universe", "mentioned", "pick", "reality", "differences",
                                "soft", "traditional", "Mission", "flat", "looks", "picked",
                                "weather", "smaller", "leg", "chairman", "ancient", "narrow",
                                "fellow", "twist", "belief", "excellent", "rights",
                                "vocational", "laid", "politics", "fill", "response",
                                "struggle", "disappear", "prove", "duty", "FOLLOWS", "editor",
                                "welcome", "anode", "possess", "hearing", "BUILDINGS", "ideal",
                                "scientist", "formed", "watching", "circle", "ought", "garden",
                                "library", "accuse", "message", "slight", "junior", "knock",
                                "empty", "protection", "treated", "birth", "expressed",
                                "planned", "choose", "confuse", "Virginia", "killed",
                                "frighten", "stayed", "worry", "surprise", "aside",
                                "photograph", "removed", "turning", "Jr", "pull", "personnel",
                                "agency", "pointed", "speech", "listen", "November", "sample",
                                "Louis", "motor", "selected", "Berlin", "CLAIMS", "spot",
                                "strike", "increasing", "exercise", "handle", "hole", "Leader",
                                "baby", "ride", "avoid", "cross", "twice", "commercial",
                                "failed", "prompt", "fat", "fourth", "visitor", "interior",
                                "Jewish", "wing", "desk", "faculty", "forget", "operate",
                                "stair", "besides", "relief", "standards", "France", "perfect",
                                "pour", "Nevertheless", "brief", "Jones", "kick", "attend",
                                "plus", "solution", "wage", "individuals", "powers",
                                "minister", "taste", "discovered", "pulled", "hire", "writer",
                                "verb", "preach", "friendly", "observed", "fan", "connect",
                                "Fig", "count", "egg", "items", "mention", "Texas",
                                "calculate", "platform", "drag", "mere", "tomorrow", "faces",
                                "pure", "fighting", "resources", "increases", "assumed",
                                "broke", "coast", "strict", "whom", "Russia", "qualify",
                                "Morgan", "victory", "fields", "pleasure", "contain", "fold",
                                "review", "April", "teach", "Richard", "whisper", "chosen",
                                "metal", "PRINCIPLES", "competition", "railroad", "safe",
                                "proved", "carrying", "horses", "kiss", "Mercer", "wheel",
                                "sail", "wants", "compared", "relieve", "approximately",
                                "wood", "historical", "persuade", "smiled", "crowd", "motion",
                                "shore", "suit", "calls", "seat", "deserve", "San", "snow",
                                "double", "educational", "neighborhood", "relative",
                                "teachers", "Independent", "puzzle", "nose", "dogs", "waited",
                                "naturally", "stone", "origin", "Rome", "wild", "scale",
                                "tremble", "drawn", "guess", "communism", "absence", "roof",
                                "sections", "sky", "walls", "Aircraft", "complain",
                                "independence", "busy", "elect", "revolution", "roar",
                                "willing", "League", "mine", "nurse", "liberal", "completed",
                                "poem", "dollar", "ordered", "levels", "ton", "settled",
                                "allowance", "bitter", "realized", "let's", "moon",
                                "sensitive", "servant", "hunger", "China", "sale",
                                "appearance", "lips", "policies", "actions", "strengthen",
                                "Monday", "onto", "directed", "leading", "machinery",
                                "theater", "Paris", "Frank", "somewhere", "Statements", "mill",
                                "projects", "starting", "hat", "ruin", "depend", "stands",
                                "signs", "families", "stir", "Khrushchev", "largely", "punish",
                                "drew", "breathe", "amuse", "characteristic", "electronic",
                                "pale", "pictures", "destroy", "expense", "somebody",
                                "completion", "disappoint", "fifty", "found", "soil", "flame",
                                "enjoy", "bless", "emotional", "promise", "she'd", "wave",
                                "commerce", "Jury", "bay", "tempt", "correct", "asking",
                                "content", "estimated", "conscious", "shine", "teaching",
                                "catch", "dish", "Saturday", "greet", "background", "flood",
                                "insect", "worse", "yellow", "occurred", "afraid", "ceremony",
                                "decrease", "trust", "yourself", "legs", "you've",
                                "communication", "describe", "sincere", "decide", "leaf",
                                "encourage", "rub", "declared", "cry", "bite", "July", "lung",
                                "significance", "helped", "gross", "apart", "disease",
                                "issues", "scratch", "dictionary", "risk", "broadcast", "drum",
                                "representative", "uncle", "cutting", "Jesus", "neglect",
                                "depth", "substantial", "GETS", "adventure", "beg", "entrance",
                                "plays", "throw", "ends", "Arts", "alive", "confidence",
                                "intellectual", "cheer", "properties", "experiments", "nut",
                                "plenty", "beneath", "closely", "description", "melt", "swear",
                                "tall", "loose", "area", "bury", "measured", "request",
                                "ourselves", "stream", "wipe", "band", "fingers", "creature",
                                "Hanover", "attorney", "load", "passing", "billion", "earnest",
                                "discussed", "translate", "achievement", "headquarters",
                                "inquiry", "rapidly", "express", "hesitate", "guard", "jobs",
                                "borrow", "owe", "Phil", "California", "ambition", "supposed",
                                "lake", "they're", "slope", "Typical", "spite", "wore", "dear",
                                "employees", "map", "pair", "spin", "one's", "praise",
                                "imagination", "hung", "instrument", "plow", "holding",
                                "objects", "straighten", "dominant", "scarce", "ring",
                                "matters", "creep", "plain", "resolution", "credit", "period",
                                "improve", "maintenance", "seize", "Laos", "we'll", "dozen",
                                "located", "dig", "towards", "curse", "major", "breath",
                                "weigh", "comfort", "federal", "guests", "priest", "sell",
                                "bodies", "female", "primarily", "cousin", "grew", "spiritual",
                                "dine", "engine", "politician", "custom", "educate",
                                "individual", "job", "Tom", "cook", "grass", "mail",
                                "salesman", "nail", "tap", "wet", "bedroom", "sufficient",
                                "chest", "dramatic", "silence", "behave", "breakfast",
                                "sudden", "passage", "scatter", "objection", "unusual",
                                "argument", "policy", "powerful", "throat", "formal", "rapid",
                                "Parker", "wrap", "luck", "grind", "rifle", "HIGHEST", "loan",
                                "represent", "skill", "spell", "broken", "arch", "angle",
                                "sick", "swell", "blind", "Contemporary", "engineer",
                                "military", "boundary", "location", "homes", "boil",
                                "officials", "operator", "Senate", "lend", "hearts", "embers", "abused", "resins", "trendy", "ssdsy" };
          return wordList;
      }

  }


#+END_SRC
* constants
* utilities
** collections
*** binary-tree
   #+BEGIN_SRC java :tangle Interview.java
   /* One node of a binary tree. The data element stored is a single 
 * character.
 */
 class TreeNode {
	public int data;      
	public TreeNode left;    
	public TreeNode right; 
	public TreeNode parent;
	public int size = 0;

	public TreeNode(int d) {
		data = d;
		size = 1;
	}
	
	public void setLeftChild(TreeNode left) {
		this.left = left;
		if (left != null) {
			left.parent = this;
		}
	}
	
	public void setRightChild(TreeNode right) {
		this.right = right;
		if (right != null) {
			right.parent = this;
		}
	}
	
	public void insertInOrder(int d) {
		if (d <= data) {
			if (left == null) {
				setLeftChild(new TreeNode(d));
			} else {
				left.insertInOrder(d);
			}
		} else {
			if (right == null) {
				setRightChild(new TreeNode(d));
			} else {
				right.insertInOrder(d);
			}
		}
		size++;
	}
	
	public int size() {
		return size;
	}
	
	public boolean isBST() {
		if (left != null) {
			if (data < left.data || !left.isBST()) {
				return false;
			}
		}
		
		if (right != null) {
			if (data >= right.data || !right.isBST()) {
				return false;
			}
		}		
		
		return true;
	}
	
	public int height() {
		int leftHeight = left != null ? left.height() : 0;
		int rightHeight = right != null ? right.height() : 0;
		return 1 + Math.max(leftHeight, rightHeight);
	}
	
	public TreeNode find(int d) {
		if (d == data) {
			return this;
		} else if (d <= data) {
			return left != null ? left.find(d) : null;
		} else if (d > data) {
			return right != null ? right.find(d) : null;
		}
		return null;
	}
	
	public static TreeNode createMinimalBST(int arr[], int start, int end){
		if (end < start) {
			return null;
		}
		int mid = (start + end) / 2;
		TreeNode n = new TreeNode(arr[mid]);
		n.setLeftChild(createMinimalBST(arr, start, mid - 1));
		n.setRightChild(createMinimalBST(arr, mid + 1, end));
		return n;
	}
	
	public static TreeNode createMinimalBST(int array[]) {
		return createMinimalBST(array, 0, array.length - 1);
	}
	
	public void print() {
		BTreePrinter.printNode(this);
	}
} 
   #+END_SRC
*** binary-tree-printer
    #+BEGIN_SRC java :tangle Interview.java
        class BTreePrinter {
       
            public static <T extends Comparable<?>> void printNode(TreeNode root) {
                int maxLevel = BTreePrinter.maxLevel(root);
           
                printNodeInternal(Collections.singletonList(root), 1, maxLevel);
            }
       
            public static <T extends Comparable<?>> void printNodeInternal(List<TreeNode> nodes, int level, int maxLevel) {
                if (nodes.isEmpty() || BTreePrinter.isAllElementsNull(nodes))
                    return;
           
                int floor = maxLevel - level;
                int endgeLines = (int) Math.pow(2, (Math.max(floor - 1, 0)));
                int firstSpaces = (int) Math.pow(2, (floor)) - 1;
                int betweenSpaces = (int) Math.pow(2, (floor + 1)) - 1;
           
                BTreePrinter.printWhitespaces(firstSpaces);
           
                List<TreeNode> newNodes = new ArrayList<TreeNode>();
                for (TreeNode node : nodes) {
                    if (node != null) {
                        System.out.print(node.data);
                        newNodes.add(node.left);
                        newNodes.add(node.right);
                    } else {
                        newNodes.add(null);
                        newNodes.add(null);
                        System.out.print(" ");
                    }
               
                    BTreePrinter.printWhitespaces(betweenSpaces);
                }
                System.out.println("");
           
                for (int i = 1; i <= endgeLines; i++) {
                    for (int j = 0; j < nodes.size(); j++) {
                        BTreePrinter.printWhitespaces(firstSpaces - i);
                        if (nodes.get(j) == null) {
                            BTreePrinter.printWhitespaces(endgeLines + endgeLines + i + 1);
                            continue;
                        }
                   
                        if (nodes.get(j).left != null)
                            System.out.print("/");
                        else
                            BTreePrinter.printWhitespaces(1);
                   
                        BTreePrinter.printWhitespaces(i + i - 1);
                   
                        if (nodes.get(j).right != null)
                            System.out.print("\\");
                        else
                            BTreePrinter.printWhitespaces(1);
                   
                        BTreePrinter.printWhitespaces(endgeLines + endgeLines - i);
                    }
               
                    System.out.println("");
                }
           
                printNodeInternal(newNodes, level + 1, maxLevel);
            }
       
            public static void printWhitespaces(int count) {
                for (int i = 0; i < count; i++)
                    System.out.print(" ");
            }
       
            public static <T extends Comparable<?>> int maxLevel(TreeNode node) {
                if (node == null)
                    return 0;
           
                return Math.max(BTreePrinter.maxLevel(node.left), BTreePrinter.maxLevel(node.right)) + 1;
            }
       
            public static <T> boolean isAllElementsNull(List<T> list) {
                for (Object object : list) {
                    if (object != null)
                        return false;
                }
           
                return true;
            }
       
        }

    #+END_SRC

*** bit-vector
*** hash-map-list
*** linked-list-node
*** tree-node
*** trie
*** trie-node
* questions
** big-O
*** example 16
   #+BEGIN_SRC java :tangle Interview.java
      class Example {

         public static int powersOf2(int n) {
             if (n < 1) {
                 return 0;
             } else if (n == 1) {
                 System.out.println(1);
                 return 1;
             } else {
                 int prev = powersOf2(n / 2);
                 int curr = prev * 2;
                 System.out.println(curr);
                 return curr;
             }
         }
         public static void main(String[] args) {
             powersOf2(4);
         }
     }   
   #+END_SRC
*** print sorted strings
    #+BEGIN_SRC java :tangle Interview.java
      class Question {

          public static int numChars = 26;
          
          public static void printSortedStrings(int remaining) {
              printSortedStrings(remaining, "");
          }
          
          public static void printSortedStrings(int remaining, String prefix) {
              if (remaining == 0) {
                  if (isInOrder(prefix)) {
                      System.out.println(prefix);
                  }
              } else {
                  for (int i = 0; i < numChars; i++) {
                      char c = ithLetter(i);
                      printSortedStrings(remaining - 1, prefix + c);
                  }
              }
          }
          
          public static boolean isInOrder(String s) {
              for (int i = 1; i < s.length(); i++) {
                  int prev = ithLetter(s.charAt(i - 1));
                  int curr = ithLetter(s.charAt(i));
                  if (prev > curr) {
                      return false;
                  }
              }
              return true;
          }
          
          public static char ithLetter(int i) {
              return (char) (((int) 'a') + i);
          }
          
          public static void main(String[] args) {
              printSortedStrings(5);
          }

      }    
    #+END_SRC
** chapter 1 arrays-strings
*** 1 is-unique
     #+BEGIN_SRC java :tangle Interview.java
       class Question1_1 {
           
           public static boolean isUniqueChars(String str) {
               if (str.length() > 128) {
                   return false;
               }
               int checker = 0;
               for (int i = 0; i < str.length(); i++) {
                   int val = str.charAt(i) - 'a';
                   if ((checker & (1 << val)) > 0) return false;
                   checker |= (1 << val);
               }
               return true;
           }
           
           public static boolean isUniqueChars2(String str) {
               if (str.length() > 128) {
                   return false;
               }
               boolean[] char_set = new boolean[128];
               for (int i = 0; i < str.length(); i++) {
                   int val = str.charAt(i);
                   if (char_set[val]) return false;
                   char_set[val] = true;
               }
               return true;
           }
           
           public static void main(String[] args) {
               String[] words = {"abcde", "hello", "apple", "kite", "padle"};
               for (String word : words) {
                   System.out.println(word + ": " + isUniqueChars(word) + " " + isUniqueChars2(word));
               }
           }
 #+END_SRC
*** 2 check-permutation
*** 3 urlify
*** 4 palindrome-permutation
*** 5 one-away
*** 6 string-compression
*** 7 rotate-matrix
*** 8 zero-matrix
*** 9 string-rotation
** chapter 2 linked-lists
*** 1 remove-dups
*** 2 return-kth-to-last
*** 3 delete-middle-node
*** 4 partition
*** 5 sum-lists
*** 6 palindrome
*** 7 intersection
*** 8 loop-detection
** chapter 3 stacks-and-queues
*** implementation
*** 1 three-in-one
*** 2 stack-min
*** 3 stack-of-plates
*** 4 queue-via-stacks
*** 5 sort-stack
*** 6 animal-shelter
** chapter 4 graphs
*** 1 implementation
*** 2 route-between-nodes
*** 3 minimal-tree
*** 4 list-of-depths
*** 5 validate-bst
*** 6 successor
*** 7 build-order
*** 8 first-common-ancestor
*** 9 bst-sequences
*** 10 check-subtree
*** 11 random-node
*** 12 paths-with-sum
** chapter 5 bit-manipulation
*** 1 insertion
*** 2 binary-to-string
*** 3 flip-bit-to-win
*** 4 next-number
*** 5 
*** 6 conversion
*** 7 pairwise-swap
*** 8 draw-line
** chapter 6 math-and-logic
*** 1 
*** 2
*** 3
*** 4
*** 5 egg-drop
*** 6 
*** 7 the-apocalypse
*** 8 
*** 9
*** 10 test-strips
** chapter 7 object-oriented-design
*** 1 deck-of-cards
*** 2 call-center
*** 3 jukebox
*** 4 parking-lot
*** 5 online-book-reader
*** 6 jigsaw
*** 7 chat-server
*** 8 othello
*** 9 circular-array
*** 10 minesweeper
*** 11 file-system
*** 12 hash-table
** chapter 8 recursion and dynamic-programming
*** implementation
*** 1 triple-step
*** 2 robot-in-a-grid
*** 3 magic-index
*** 4 power-set
*** 5 recursive-multiply
*** 6 towers-of-hanoi
*** 7 permutations-without-dups
*** 8 permutations-with-dups
*** 9 parens
*** 10 paint-fill
*** 11 coins
*** 12 eight-queens
*** 13 stack-of-boxes
*** 14 boolean-evaluation
** chapter 9 scalability and memory limits
*** 2 social-network
*** 5 cache 
** chapter 10 sorting and searching
*** 1 sorted-merge
*** 2 group-anagrams
*** 3 search-in-rotated-array
*** 4 sorted-search-no-size
*** 5 sparse-search
*** 6 
*** 7 missing-int
*** 8 find-duplicates
*** 9 sorted-matrix-search
*** 10 rank-from-stream
*** 11 peaks-and-valleys
** chapter 11 ?
** chapter 12 ?
** chapter 13 java
*** intro
*** 1 private-constructor
*** 5 treemap-hashmap-linkedhashmap
*** 6 object-reflection
*** 7 lambda-expression
*** 8 lambda-random
** chapter 14
** chapter 15 threads-and-locks
*** demo-a
*** demo-b
*** demo-locks
*** demo-synchronization
*** demo-synchronization-blocking
*** demo-wait-notify
*** dining-philosophers
*** deadlock-free-class
*** call-in-order
*** synchronized-methods
*** fizzbuzz
** chapter 16 moderate
*** 1 number-swapper
*** 2 word-frequencies
*** 3 intersection
*** 4 tic-tac-win
*** 5 factorial-zeros
*** 6 smallest-difference
*** 7 number-max
*** 8 english-int
*** 9 operations
*** 10 living-people
*** 11 diving-board
*** 12 xml-encoding
*** 13 bisect-squares
*** 14 best-line
*** 15 master-mind
*** 16 sub-sort
*** 17 contiguous-sequence
*** 18 pattern-matcher
*** 19 pond-sizes
*** 20 t9
*** 21 sum-swap
*** 22 langtons-ant
*** 23 rand7-from-rand5
*** 24 pairs-with-sum
*** 25 lru-cache
*** 26 calculator
** chapter 17 hard
*** 1 add-without-plus
*** 2 shuffle
*** 3 random-set
*** 4 missing-number
*** 5 letters-and-number
*** 6 count-of-2s
*** 7 baby-names
*** 8 circus-tower
*** 9 kth-multiple
*** 10 majority-element
*** 11 word-distance
*** 12 bi-node
*** 13 re-space
*** 14 smallest-k
*** 15 
*** 16 the-masseuse
*** 17 multi-search
*** 18 shortest-supersequence
*** 19 missing-two
*** 20 continuous-median
*** 21 volume-of-histogram
*** 22 word-transformer
*** 23 max-black-square
*** 24 max-submatrix
*** 25 word-rectangle
*** 26 sparse-similarity
** chapter 18
*** 1
*** 2
*** 3
*** 4
*** 5
*** 6
*** 7
*** 8
*** 9
*** 10
*** 11
*** 12
*** 13
* footer
#+BEGIN_SRC java :tangle Interview.java
}
#+END_SRC

